// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package event;

option go_package = "go.temporal.io/temporal-proto/event";
option java_package = "io.temporal.proto.event";
option java_multiple_files = true;

// Whenever this list of events is changed do change the function shouldBufferEvent in mutableStateBuilder.go to make sure to do the correct event ordering.
enum EventType {
    EventTypeWorkflowExecutionStarted = 0;
    EventTypeWorkflowExecutionCompleted = 1;
    EventTypeWorkflowExecutionFailed = 2;
    EventTypeWorkflowExecutionTimedOut = 3;
    EventTypeDecisionTaskScheduled = 4;
    EventTypeDecisionTaskStarted = 5;
    EventTypeDecisionTaskCompleted = 6;
    EventTypeDecisionTaskTimedOut = 7;
    EventTypeDecisionTaskFailed = 8;
    EventTypeActivityTaskScheduled = 9;
    EventTypeActivityTaskStarted = 10;
    EventTypeActivityTaskCompleted = 11;
    EventTypeActivityTaskFailed = 12;
    EventTypeActivityTaskTimedOut = 13;
    EventTypeActivityTaskCancelRequested = 14;
    EventTypeRequestCancelActivityTaskFailed = 15;
    EventTypeActivityTaskCanceled = 16;
    EventTypeTimerStarted = 17;
    EventTypeTimerFired = 18;
    EventTypeCancelTimerFailed = 19;
    EventTypeTimerCanceled = 20;
    EventTypeWorkflowExecutionCancelRequested = 21;
    EventTypeWorkflowExecutionCanceled = 22;
    EventTypeRequestCancelExternalWorkflowExecutionInitiated = 23;
    EventTypeRequestCancelExternalWorkflowExecutionFailed = 24;
    EventTypeExternalWorkflowExecutionCancelRequested = 25;
    EventTypeMarkerRecorded = 26;
    EventTypeWorkflowExecutionSignaled = 27;
    EventTypeWorkflowExecutionTerminated = 28;
    EventTypeWorkflowExecutionContinuedAsNew = 29;
    EventTypeStartChildWorkflowExecutionInitiated = 30;
    EventTypeStartChildWorkflowExecutionFailed = 31;
    EventTypeChildWorkflowExecutionStarted = 32;
    EventTypeChildWorkflowExecutionCompleted = 33;
    EventTypeChildWorkflowExecutionFailed = 34;
    EventTypeChildWorkflowExecutionCanceled = 35;
    EventTypeChildWorkflowExecutionTimedOut = 36;
    EventTypeChildWorkflowExecutionTerminated = 37;
    EventTypeSignalExternalWorkflowExecutionInitiated = 38;
    EventTypeSignalExternalWorkflowExecutionFailed = 39;
    EventTypeExternalWorkflowExecutionSignaled = 40;
    EventTypeUpsertWorkflowSearchAttributes = 41;
}

enum DecisionTaskFailedCause {
    DecisionTaskFailedCauseUnhandledDecision = 0;
    DecisionTaskFailedCauseBadScheduleActivityAttributes = 1;
    DecisionTaskFailedCauseBadRequestCancelActivityAttributes = 2;
    DecisionTaskFailedCauseBadStartTimerAttributes = 3;
    DecisionTaskFailedCauseBadCancelTimerAttributes = 4;
    DecisionTaskFailedCauseBadRecordMarkerAttributes = 5;
    DecisionTaskFailedCauseBadCompleteWorkflowExecutionAttributes = 6;
    DecisionTaskFailedCauseBadFailWorkflowExecutionAttributes = 7;
    DecisionTaskFailedCauseBadCancelWorkflowExecutionAttributes = 8;
    DecisionTaskFailedCauseBadRequestCancelExternalWorkflowExecutionAttributes = 9;
    DecisionTaskFailedCauseBadContinueAsNewAttributes = 10;
    DecisionTaskFailedCauseStartTimerDuplicateId = 11;
    DecisionTaskFailedCauseResetStickyTasklist = 12;
    DecisionTaskFailedCauseWorkflowWorkerUnhandledFailure = 13;
    DecisionTaskFailedCauseBadSignalWorkflowExecutionAttributes = 14;
    DecisionTaskFailedCauseBadStartChildExecutionAttributes = 15;
    DecisionTaskFailedCauseForceCloseDecision = 16;
    DecisionTaskFailedCauseFailoverCloseDecision = 17;
    DecisionTaskFailedCauseBadSignalInputSize = 18;
    DecisionTaskFailedCauseResetWorkflow = 19;
    DecisionTaskFailedCauseBadBinary = 20;
    DecisionTaskFailedCauseScheduleActivityDuplicateId = 21;
    DecisionTaskFailedCauseBadSearchAttributes = 22;
}

enum TimeoutType {
    TimeoutTypeStartToClose = 0;
    TimeoutTypeScheduleToStart = 1;
    TimeoutTypeScheduleToClose = 2;
    TimeoutTypeHeartbeat = 3;
}

enum CancelExternalWorkflowExecutionFailedCause {
    CancelExternalWorkflowExecutionFailedCauseUnknownExternalWorkflowExecution = 0;
}

enum SignalExternalWorkflowExecutionFailedCause {
    SignalExternalWorkflowExecutionFailedCauseUnknownExternalWorkflowExecution= 0;
}

enum ChildWorkflowExecutionFailedCause {
    ChildWorkflowExecutionFailedCauseWorkflowAlreadyRunning = 0;
}

