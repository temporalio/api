// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.api.namespace.v1;

option go_package = "go.temporal.io/api/namespace/v1;namespace";
option java_package = "io.temporal.api.namespace.v1";
option java_multiple_files = true;
option java_outer_classname = "MessageProto";
option ruby_package = "Temporal::Api::Namespace::V1";

import "temporal/api/enums/v1/namespace.proto";
import "google/protobuf/wrappers.proto";

message NamespaceInfo {
    string name = 1;
    temporal.api.enums.v1.NamespaceState state = 2;
    string description = 3;
    string owner_email = 4;
    // A key-value map for any customized purpose.
    map<string, string> data = 5;
    string id = 6;
}

message NamespaceConfig {
    int32 workflow_execution_retention_period_in_days = 1;
    google.protobuf.BoolValue emit_metric = 2;
    BadBinaries bad_binaries = 3;
    // If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
    temporal.api.enums.v1.ArchivalState history_archival_state = 4;
    string history_archival_uri = 5;
    // If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
    temporal.api.enums.v1.ArchivalState visibility_archival_state = 6;
    string visibility_archival_uri = 7;
}

message BadBinaries {
    map<string, BadBinaryInfo> binaries = 1;
}

message BadBinaryInfo {
    string reason = 1;
    string operator = 2;
    int64 create_time_nano = 3;
}

message UpdateNamespaceInfo {
    string description = 1;
    string owner_email = 2;
    // A key-value map for any customized purpose.
    map<string, string> data = 3;
}
