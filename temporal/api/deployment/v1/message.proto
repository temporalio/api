// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.api.deployment.v1;

option go_package = "go.temporal.io/api/deployment/v1;deployment";
option java_package = "io.temporal.api.deployment.v1";
option java_multiple_files = true;
option java_outer_classname = "MessageProto";
option ruby_package = "Temporalio::Api::Deployment::V1";
option csharp_namespace = "Temporalio.Api.Deployment.V1";

import "google/protobuf/timestamp.proto";

import "temporal/api/enums/v1/deployment.proto";
import "temporal/api/enums/v1/task_queue.proto";
import "temporal/api/common/v1/message.proto";

// Identifies a worker deployment. A worker deployment is identified by the combination of
// deployment name + build ID. Both values are required.
message Deployment {
    string deployment_name = 1;
    string build_id = 2;
}

// Holds information about a worker deployment.
message DeploymentInfo {
    Deployment deployment = 1;
    enums.v1.DeploymentStatus status = 2;
    google.protobuf.Timestamp status_change_time = 3;
    // A user-defined set of fields. Can be updated via other write operations to the deployment,
    // such as SetCurrentDeployment.
    common.v1.Memo memo = 4;
    repeated TaskQueueInfo task_queues_info = 5;

    message TaskQueueInfo {
        string task_queue_name = 1;
        enums.v1.TaskQueueType task_queue_type = 2;
        // When server saw the first poller for this task queue in this deployment.
        google.protobuf.Timestamp first_poller_time = 3;
    }
}

// Used as part of Deployment write APIs to update metadata attached to a deployment.
message UpdateDeploymentMemo {
    common.v1.Memo upsert_entries = 1;
    repeated string remove_entries = 2;
}
