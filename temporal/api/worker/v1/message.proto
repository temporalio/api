syntax = "proto3";

package temporal.api.worker.v1;

option go_package = "go.temporal.io/api/worker/v1;worker";
option java_package = "io.temporal.api.worker.v1";
option java_multiple_files = true;
option java_outer_classname = "MessageProto";
option ruby_package = "Temporalio::Api::Worker::V1";
option csharp_namespace = "Temporalio.Api.Worker.V1";


import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "temporal/api/deployment/v1/message.proto";


message WorkerTaskStatus {
  google.protobuf.Timestamp last_successful_task_poll_time = 1;

  int32 task_pollers = 2;

  int32 slots_available = 3;
  int32 slots_used = 4;

  int32 processed_tasks = 5;
  int32 failed_tasks = 6;

  float process_rate_min = 7;
  float failure_rate_min = 8;
}

// Holds everything needed to identify the host/process context
message WorkerHostInfo {
  // worker host identifier, should be unique for the namespace.
  string host_id = 1;

  // worker process identifier, should be unique for the host.
  string process_id = 2;

  // freeform (e.g. "k8s container abc123", etc.)
  string host_context = 3;

  // Worker identity, set by the worker, may not be unique.
  string worker_identity = 7;
}

message WorkerStatus {
  // Worker identifier, should be unique for the namespace. Required.
  string worker_id = 1;

  // Worker host information. Required.
  WorkerHostInfo host_info = 2;

  // Task queue this worker is polling for tasks. Required.
  string task_queue = 3;

  // Required.
  temporal.api.deployment.v1.WorkerDeploymentVersion deployment_version = 4;

  string sdk_name = 6;
  string sdk_version = 7;

  google.protobuf.Duration uptime = 9;
  google.protobuf.Timestamp last_heartbeat_time = 10;

  WorkerTaskStatus workflow_task_status = 11;
  WorkerTaskStatus activity_task_status = 12;
  WorkerTaskStatus nexus_task_status = 13;

  float cpu_usage_percent = 14;
  int64 memory_usage_bytes = 15;
  float cache_hit_ratio = 16;
  float max_cache_size = 17;
  float available_cache_size = 18;
}
