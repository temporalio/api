// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.query.v1;

option go_package = "go.temporal.io/temporal-proto/query/v1;query";
option java_package = "io.temporal.proto.query.v1";
option java_multiple_files = true;
option java_outer_classname = "MessageProto";

import "temporal/enums/v1/query.proto";
import "temporal/enums/v1/workflow.proto";
import "temporal/common/v1/message.proto";

message WorkflowQuery {
    string query_type = 1;
    temporal.common.v1.Payloads query_args = 2;
}
message WorkflowQueryResult {
    temporal.enums.v1.QueryResultType result_type = 1;
    temporal.common.v1.Payloads answer = 2;
    string error_message = 3;
}

message QueryRejected {
    temporal.enums.v1.WorkflowExecutionStatus status = 1;
}
