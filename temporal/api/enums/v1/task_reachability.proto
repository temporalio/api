syntax = "proto3";

package temporal.api.enums.v1;

option go_package = "go.temporal.io/api/enums/v1;enums";
option java_package = "io.temporal.api.enums.v1";
option java_multiple_files = true;
option java_outer_classname = "TaskReachabilityProto";
option ruby_package = "Temporalio::Api::Enums::V1";
option csharp_namespace = "Temporalio.Api.Enums.V1";

// Scope for task reachability query.
enum TaskReachabilityScope {
    TASK_REACHABILITY_SCOPE_UNSPECIFIED = 0;
    // Query task reachability globally in a namespace.
    TASK_REACHABILITY_SCOPE_NAMESPACE = 1;
    // Query task reachability for a specific task queue.
    TASK_REACHABILITY_SCOPE_TASK_QUEUE = 2;
}

// Task reachability for a specific poller.
enum TaskReachability {
    TASK_REACHABILITY_UNSPECIFIED = 0;
    // There's a possiblity for a worker to receive new workflow tasks. Workers should *not* be retired.
    TASK_REACHABILITY_NEW_WORKFLOWS = 1;
    // There's a possiblity for a worker to receive existing open workflows. Workers should *not* be retired.
    TASK_REACHABILITY_OPEN_WORKFLOWS = 2;
    // There's a possiblity for a worker to receive existing closed workflows. Workers may be retired dependending on
    // application requirements. For example, if there's no need to query closed workflows.
    TASK_REACHABILITY_CLOSED_WORKFLOWS = 3;
}

